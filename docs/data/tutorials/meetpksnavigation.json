{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"overview","hierarchy":{"paths":[],"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation"},"variants":[{"paths":["\/tutorials\/meetpksnavigation"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[{"image":"Tutorials-background.png","action":{"overridingTitle":"Get started","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"type":"reference","isActive":true},"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Meet PKSNavigation","type":"text"}]},{"text":" is your comprehensive guide to mastering PKSNavigation, the powerful and flexible navigation framework for SwiftUI applications. This tutorial explores every use case, demonstrating how to manage complex navigation flows with stack-based, sheet, and full-screen cover presentations effortlessly. By following along, you’ll gain the skills to implement robust and customizable navigation solutions that enhance the user experience in your SwiftUI projects.","type":"text"}],"type":"paragraph"}],"kind":"hero","title":"Meet PKSNavigation","backgroundImage":"Tutorials-background.png"},{"kind":"volume","image":null,"content":[],"name":null,"chapters":[{"image":"Tutorials-tab-view-background.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"How to create tab structure"}]}],"tutorials":["doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs"],"name":"Create Tab Structure with PKSNavigation"}]}],"metadata":{"categoryPathComponent":"MeetPKSNavigation","estimatedTime":"5min","category":"Meet PKSNavigation","title":"Meet PKSNavigation","role":"overview"},"references":{"Tutorials-background.png":{"alt":"The image displays a set of rectangular shapes, arranged symmetrically. One larger rectangle is positioned centrally and above a row of four smaller rectangles. The background is black, and the rectangles are filled with a cyan color and have rounded edges, giving the layout a balanced and minimalistic look.","type":"image","identifier":"Tutorials-background.png","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/Tutorials-background.png","traits":["1x","light"]}]},"Tutorials-tab-view-background.png":{"alt":"This image has a similar symmetrical arrangement with cyan rectangles on a black background. The top central rectangle has a small rectangular section divided into two parts at the bottom, resembling a tab or division within the rectangle. The rectangles' layout forms an inverted 'T' shape, with two rectangles on the bottom corners and one on the top.","type":"image","identifier":"Tutorials-tab-view-background.png","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/Tutorials-tab-view-background.png","traits":["1x","light"]}]},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/CreatingTabs":{"title":"Creating a Tab View","estimatedTime":"5min","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to create a dynamic and responsive tab view in your SwiftUI application using PKSNavigation. We’ll guide you through setting up your project, integrating PKSNavigation, and implementing a functional tab-based navigation system."}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs","role":"project","kind":"project","url":"\/tutorials\/pksnavigation\/creatingtabs","type":"topic"},"doc://pksnavigation.PKSNavigation/tutorials/MeetPKSNavigation":{"type":"topic","url":"\/tutorials\/meetpksnavigation","kind":"overview","title":"Meet PKSNavigation","role":"overview","abstract":[{"type":"strong","inlineContent":[{"type":"text","text":"Meet PKSNavigation"}]},{"text":" is your comprehensive guide to mastering PKSNavigation, the powerful and flexible navigation framework for SwiftUI applications. This tutorial explores every use case, demonstrating how to manage complex navigation flows with stack-based, sheet, and full-screen cover presentations effortlessly. By following along, you’ll gain the skills to implement robust and customizable navigation solutions that enhance the user experience in your SwiftUI projects.","type":"text"}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation"}}}