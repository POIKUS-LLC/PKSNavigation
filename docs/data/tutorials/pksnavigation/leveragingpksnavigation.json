{"sections":[{"projectFiles":"tutorial-chapter-2.zip","kind":"hero","chapter":"Installation and Configuration","title":"Seamless Navigation in iOS Tabs: Leveraging PKSNavigation","estimatedTimeInMinutes":25,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows."}]}]},{"tasks":[{"stepsSection":[{"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To manage our articles effectively, we’ll start by creating an "},{"type":"codeVoice","code":"Article"},{"text":" model. This model will encapsulate the properties of an article, such as its title, author, content, and publication date.","type":"text"}]}],"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Define the Article Model"}],"type":"strong"}]}],"media":null,"type":"step","runtimePreview":null,"code":"chapter-2-01-article-model.swift"},{"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Create Mock Data for Articles"}]}]}],"code":"chapter-2-02-article-mock.swift","runtimePreview":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"With the ","type":"text"},{"code":"Article","type":"codeVoice"},{"text":" model in place, we’ll create some mock data to simulate a list of articles. This will help us develop and test the UI components without needing a backend service.","type":"text"}]}]},{"runtimePreview":"preview-article-row.png","media":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Design the Article Row View","type":"text"}],"type":"strong"}]}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we’ll create a reusable row view that will display individual articles in a list. This view will show the article’s title, author, and publication date."}]}],"code":"chapter-2-03-article-row.swift","type":"step"},{"runtimePreview":"preview-article-detail.png","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, we’ll create a detail view that presents the full content of an article. This view will be navigated to when a user selects an article from the list."}]}],"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Develop the Article Detail View","type":"text"}]}]}],"type":"step","media":null,"code":"chapter-2-04-article-detail.swift"}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In this section, we will develop an application where users can view a list of articles and navigate to their detailed views. To achieve this, we first need to define the necessary data models and views that will represent our articles."}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"title":"Building the Articles Feature","anchor":"Building-the-Articles-Feature"},{"anchor":"Setting-Up-PKS-Navigation","title":"Setting Up PKS Navigation","stepsSection":[{"runtimePreview":null,"media":null,"type":"step","code":"chapter-2-05-create-enum.swift","caption":[{"type":"paragraph","inlineContent":[{"text":"We’ll start by creating an enumeration that represents the different navigation pages in our application. This enum will conform to the ","type":"text"},{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" protocol, which is essential for PKSNavigation to handle navigation flows."}]}],"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Create the Navigation Enum"}],"type":"strong"}],"type":"paragraph"}]},{"code":"chapter-2-06-enum-add-pages.swift","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Extend the Navigation Enum with Pages"}],"type":"strong"}]}],"runtimePreview":null,"media":null,"caption":[{"type":"paragraph","inlineContent":[{"text":"Next, we’ll extend the ","type":"text"},{"code":"NavigationPages","type":"codeVoice"},{"type":"text","text":" enum to include the associated data required for each navigation case. This ensures that each page can receive the necessary information when navigated to."}]}],"type":"step"},{"type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Finally, we’ll ensure that our "},{"type":"codeVoice","code":"NavigationPages"},{"text":" enum fully conforms to the ","type":"text"},{"type":"codeVoice","code":"PKSPage"},{"text":" protocol by implementing any required methods or properties. This step guarantees that PKSNavigation can correctly interpret and manage our navigation routes.","type":"text"}]}],"code":"chapter-2-07-enum-confirm-protocol.swift","media":null,"runtimePreview":null,"content":[{"inlineContent":[{"inlineContent":[{"text":"Ensure Protocol Conformance","type":"text"}],"type":"strong"}],"type":"paragraph"}]}],"contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"In this section, we’ll set up the navigation pages required for our application using PKSNavigation. This involves defining an enumeration for our navigation routes and ensuring they conform to the necessary protocols for PKSNavigation to manage them effectively."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}]},{"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"In this section, we’ll set up the homepage of our application, which will display the list of articles. We’ll integrate PKSNavigation to manage navigation from the homepage to the article detail views seamlessly."}],"type":"paragraph"}]}],"title":"Implementing Homepage Navigation","stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Create the Homepage View"}]}]}],"type":"step","caption":[{"inlineContent":[{"text":"We’ll begin by creating the ","type":"text"},{"type":"codeVoice","code":"HomepageView"},{"text":", which will display a list of articles using the ","type":"text"},{"type":"codeVoice","code":"ArticleRowView"},{"text":" we previously created. This view will allow users to select an article to view its details.","type":"text"}],"type":"paragraph"}],"media":null,"code":"chapter-2-08-homepage.swift","runtimePreview":"preview-article-list-homepage.png"},{"type":"step","code":"chapter-2-09-homepage-navigation-manager.swift","runtimePreview":"preview-article-list-homepage.png","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Integrate PKSNavigation Manager"}],"type":"strong"}]}],"media":null,"caption":[{"inlineContent":[{"text":"Next, we’ll integrate PKSNavigation into the ","type":"text"},{"type":"codeVoice","code":"HomepageView"},{"text":" to handle navigation. This involves initializing a ","type":"text"},{"type":"codeVoice","code":"PKSNavigationManager"},{"text":" and configuring it with our ","type":"text"},{"type":"codeVoice","code":"NavigationPages"},{"type":"text","text":" enum."}],"type":"paragraph"}]},{"type":"step","media":null,"code":"chapter-2-10-homepage-navigation.swift","runtimePreview":null,"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Update Article Rows for PKSNavigation","type":"text"}]}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll modify the article rows to use PKSNavigation for navigation instead of "},{"code":"NavigationLink","type":"codeVoice"},{"type":"text","text":". This allows us to leverage PKSNavigation’s advanced navigation capabilities."}]}]}],"anchor":"Implementing-Homepage-Navigation"},{"contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"In this final section, we’ll set up the detail view for each article. We’ll ensure that navigation back to the homepage is handled smoothly using PKSNavigation, providing users with an intuitive way to return to the article list.","type":"text"}]}],"mediaPosition":"trailing"}],"title":"Configuring Detail Page Navigation","stepsSection":[{"caption":[{"inlineContent":[{"type":"text","text":"We’ll start by setting up the base structure of the "},{"type":"codeVoice","code":"ArticleDetailView"},{"type":"text","text":", ensuring it can display the full content of an article."}],"type":"paragraph"}],"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Initialize Article Detail Base","type":"text"}],"type":"strong"}]}],"media":null,"runtimePreview":"preview-article-detail.png","code":"chapter-2-11-article-detail-base.swift","type":"step"},{"code":"chapter-2-12-article-detail-navigation.swift","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll integrate PKSNavigation into the "},{"type":"codeVoice","code":"ArticleDetailView"},{"text":" to manage navigation actions such as dismissing the view.","type":"text"}]}],"type":"step","media":null,"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Integrate PKSNavigation into Detail View"}],"type":"strong"}],"type":"paragraph"}],"runtimePreview":"preview-article-detail.png"},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Add Custom Back Button with "},{"type":"codeVoice","code":"PKSDismissKey"}],"type":"strong"}]}],"caption":[{"inlineContent":[{"text":"To enhance navigation, we’ll add a custom back button that utilizes ","type":"text"},{"code":"PKSDismissKey","type":"codeVoice"},{"type":"text","text":" for dismissing the detail view. This ensures that the navigation flow remains consistent and managed by PKSNavigation."}],"type":"paragraph"}],"code":"chapter-2-13-article-detail-navigation-back-button.swift","type":"step","media":null,"runtimePreview":"preview-article-detail-back.png"}],"anchor":"Configuring-Detail-Page-Navigation"},{"anchor":"Enhancing-Detail-Page-with-Sheet-Navigation","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"In this section, we’ll enhance the detail view by adding sheet-based navigation for additional information, such as author details. This approach provides a more interactive and modular user experience."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"title":"Enhancing Detail Page with Sheet Navigation","stepsSection":[{"media":null,"content":[{"inlineContent":[{"inlineContent":[{"type":"text","text":"Create the Author Detail View"}],"type":"strong"}],"type":"paragraph"}],"caption":[{"inlineContent":[{"text":"We’ll start by creating the ","type":"text"},{"type":"codeVoice","code":"AuthorDetailView"},{"type":"text","text":", which will display detailed information about the article’s author. This view will be presented as a sheet from the "},{"type":"codeVoice","code":"ArticleDetailView"},{"type":"text","text":"."}],"type":"paragraph"}],"code":"chapter-2-14-author-detail.swift","runtimePreview":"preview-author-detail.png","type":"step"},{"type":"step","media":null,"code":"chapter-2-15-author-detail-sheet-preparation.swift","runtimePreview":"preview-author-detail-sheet.png","content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Configure Author Detail for Sheet Presentation"}]}],"type":"paragraph"}],"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Next, we’ll prepare the "},{"code":"AuthorDetailView","type":"codeVoice"},{"type":"text","text":" to be presented as a sheet. This involves setting up the sheet size based on content size."}]}]},{"code":"chapter-2-16-author-detail-navigation-new-navigation-manager.swift","runtimePreview":"preview-author-detail-sheet.png","type":"step","caption":[{"type":"paragraph","inlineContent":[{"text":"We’ll create a new ","type":"text"},{"code":"PKSNavigationManager","type":"codeVoice"},{"type":"text","text":" specifically for handling navigation flows within the "},{"type":"codeVoice","code":"AuthorDetailView"},{"type":"text","text":". This is necessary because the author detail can initiate new navigation flows, such as navigating to other authors or related articles."}]}],"content":[{"inlineContent":[{"inlineContent":[{"text":"Establish a New Navigation Manager for Author Details","type":"text"}],"type":"strong"}],"type":"paragraph"}],"media":null},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Set the Parent Navigation Manager"}]}]}],"media":null,"code":"chapter-2-17-author-detail-navigation-set-parent.swift","runtimePreview":"preview-author-detail-sheet.png","caption":[{"inlineContent":[{"type":"text","text":"To ensure coherent navigation flows, we’ll set the parent navigation manager for the new "},{"code":"PKSNavigationManager","type":"codeVoice"},{"text":". This allows PKSNavigation to make informed decisions about navigation based on the app’s overall requirements, enhancing stability and consistency.","type":"text"}],"type":"paragraph"}],"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Create New Navigable Modals"}]}]}],"runtimePreview":"preview-author-detail-sheet.png","media":null,"code":"chapter-2-18-author-detail-navigation-create-modal-stacks.swift","type":"step","caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When creating a navigation manager for the author detail flow, we’ll set up new modals. This allows the new navigation manager to handle sheet or cover-style navigations independently, ensuring a modular and scalable navigation structure."}]}]},{"code":"chapter-2-19-author-detail-navigation-cover-navigation.swift","media":null,"caption":[{"type":"paragraph","inlineContent":[{"type":"text","text":"We’ll add a tap gesture recognizer to the author’s articles. When the article row is tapped, the "},{"type":"codeVoice","code":"AuthorDetailView"},{"text":" will be presented as a full screen cover.","type":"text"}]}],"type":"step","runtimePreview":"preview-author-detail-sheet.png","content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Add Tap Gesture to Article Row for Author Navigation","type":"text"}],"type":"strong"}]}]},{"runtimePreview":null,"type":"step","media":null,"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Update Navigation Pages with Author Detail"}],"type":"strong"}]}],"code":"chapter-2-20-enum-add-new-page.swift","caption":[{"inlineContent":[{"text":"We’ll add the ","type":"text"},{"type":"codeVoice","code":"AuthorDetail"},{"type":"text","text":" page to the "},{"type":"codeVoice","code":"NavigationPages"},{"type":"text","text":" enum. This allows us to navigate to the "},{"type":"codeVoice","code":"AuthorDetailView"},{"text":" using the updated navigation routes managed by PKSNavigation.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"type":"text","text":"Enhance Article Detail for Author Navigation"}],"type":"strong"}]}],"media":null,"code":"chapter-2-21-article-detail-author-navigation-preparation.swift","runtimePreview":"preview-article-detail-back.png","caption":[{"inlineContent":[{"text":"We’ll begin modifying the ","type":"text"},{"type":"codeVoice","code":"ArticleDetailView"},{"type":"text","text":" to prepare it for navigating to the "},{"type":"codeVoice","code":"AuthorDetailView"},{"text":".","type":"text"}],"type":"paragraph"}],"type":"step"},{"runtimePreview":"preview-article-detail-author-name-navigationable.png","code":"chapter-2-22-article-detail-to-author-detail-navigation.swift","caption":[{"inlineContent":[{"type":"text","text":"Finally, we’ll make the author name clickable. When clicked, it will present the "},{"type":"codeVoice","code":"AuthorDetailView"},{"type":"text","text":" as a sheet using PKSNavigation, allowing users to seamlessly access author information."}],"type":"paragraph"}],"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Implement Navigation Flow from Author Name","type":"text"}]}]}],"media":null}]}],"kind":"tasks"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation"},"kind":"project","schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"title":"Seamless Navigation in iOS Tabs: Leveraging PKSNavigation","category":"Meet PKSNavigation","role":"project","categoryPathComponent":"MeetPKSNavigation"},"hierarchy":{"paths":[["doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation","doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation\/Getting-Started","doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation\/Getting-Started\/Installation-and-Configuration"]],"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation","modules":[{"projects":[{"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs","sections":[{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs#Set-Up-a-New-Project-and-Add-PKSNavigation"},{"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs#Implementing-the-Tab-View","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Building-the-Articles-Feature"},{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Setting-Up-PKS-Navigation"},{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Implementing-Homepage-Navigation"},{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Configuring-Detail-Page-Navigation"},{"kind":"task","reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Enhancing-Detail-Page-with-Sheet-Navigation"}],"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation"}],"reference":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation\/Getting-Started\/Installation-and-Configuration"}]},"variants":[{"paths":["\/tutorials\/pksnavigation\/leveragingpksnavigation"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"chapter-2-02-article-mock.swift":{"fileName":"ArticleModel.swift","content":["import Foundation","","struct Article: Identifiable {","    let id = UUID()","    let title: String","    let author: String","    let date: String","    let summary: String","    let description: [String]","    let imageName: String","}","","extension Article {","    static var mock: Article {","        Article(","            title: \"Understanding SwiftUI\",","            author: \"Jane Doe\",","            date: \"October 1, 2023\",","            summary: \"An in-depth exploration of SwiftUI for building modern iOS applications.\",","            description: [","                \"SwiftUI is a powerful framework introduced by Apple that allows developers to build user interfaces across all Apple platforms with the power of Swift. It provides a declarative syntax, making UI development more intuitive and efficient.\",","                \"In this article, we'll delve into the basics of SwiftUI, explore its core components, and understand how it simplifies the process of creating dynamic and responsive user interfaces.\"","            ],","            imageName: \"swiftui\"","        )","    }","}","","extension Array where Element == Article {","    static var mockData: [Article] {","        [","            Article(","                title: \"Understanding SwiftUI\",","                author: \"Jane Doe\",","                date: \"October 1, 2023\",","                summary: \"An in-depth exploration of SwiftUI for building modern iOS applications.\",","                description: [","                    \"SwiftUI is a powerful framework introduced by Apple that allows developers to build user interfaces across all Apple platforms with the power of Swift. It provides a declarative syntax, making UI development more intuitive and efficient.\",","                    \"In this article, we'll delve into the basics of SwiftUI, explore its core components, and understand how it simplifies the process of creating dynamic and responsive user interfaces.\"","                ],","                imageName: \"swiftui\"","            ),","            Article(","                title: \"Combine Framework Basics\",","                author: \"John Smith\",","                date: \"September 25, 2023\",","                summary: \"Learn the fundamentals of Apple's Combine framework for reactive programming.\",","                description: [","                    \"Combine is Apple's declarative framework for handling asynchronous events by combining event-processing operators. It provides a unified approach to handling events from different sources like UI controls, network responses, and more.\",","                    \"This article covers the basics of Combine, including publishers, subscribers, and operators, helping you get started with reactive programming in your iOS applications.\"","                ],","                imageName: \"combine\"","            ),","            Article(","                title: \"Mastering iOS Animations\",","                author: \"Emily Clark\",","                date: \"September 15, 2023\",","                summary: \"Enhance your apps with smooth and interactive animations.\",","                description: [","                    \"Animations play a crucial role in enhancing user experience by providing visual feedback and making interactions feel more natural. iOS offers a robust set of tools for creating animations that can make your app stand out.\",","                    \"In this comprehensive guide, we'll explore various animation techniques in iOS, including implicit and explicit animations, spring animations, and keyframe animations.\"","                ],","                imageName: \"animation\"","            ),","            \/\/ Additional Mock Articles","            Article(","                title: \"Networking in SwiftUI\",","                author: \"Michael Brown\",","                date: \"October 5, 2023\",","                summary: \"Implementing network requests and handling data in SwiftUI applications.\",","                description: [","                    \"Networking is a fundamental aspect of most modern applications. SwiftUI, combined with Swift's powerful networking capabilities, allows developers to fetch and display data seamlessly.\",","                    \"This article walks you through setting up network requests, parsing JSON data, and updating your SwiftUI views based on the received data.\"","                ],","                imageName: \"networking\"","            ),","            Article(","                title: \"State Management in SwiftUI\",","                author: \"Laura Wilson\",","                date: \"October 10, 2023\",","                summary: \"Managing state effectively in SwiftUI to create dynamic interfaces.\",","                description: [","                    \"State management is critical in building responsive and dynamic user interfaces. SwiftUI offers various property wrappers like `@State`, `@Binding`, `@ObservedObject`, and `@EnvironmentObject` to handle state changes efficiently.\",","                    \"In this article, we'll explore different state management techniques in SwiftUI, their appropriate use cases, and best practices to maintain a clean and manageable codebase.\"","                ],","                imageName: \"state\"","            ),","            Article(","                title: \"Integrating Core Data with SwiftUI\",","                author: \"Sophia Martinez\",","                date: \"October 12, 2023\",","                summary: \"Persisting data in SwiftUI applications using Core Data.\",","                description: [","                    \"Core Data is Apple's framework for managing object graphs and persisting data. Integrating Core Data with SwiftUI allows for robust data management within your applications.\",","                    \"This guide covers setting up Core Data in a SwiftUI project, performing CRUD operations, and displaying persisted data within your SwiftUI views.\"","                ],","                imageName: \"coredata\"","            ),","            Article(","                title: \"Building Custom Views in SwiftUI\",","                author: \"David Lee\",","                date: \"October 15, 2023\",","                summary: \"Creating reusable and customizable views to streamline your SwiftUI development.\",","                description: [","                    \"Custom views promote reusability and maintainability in your SwiftUI projects. By encapsulating UI components, you can create modular and flexible interfaces.\",","                    \"This article demonstrates how to build custom views, pass data between them, and apply modifiers to enhance their functionality and appearance.\"","                ],","                imageName: \"customviews\"","            )","        ]","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-02-article-mock.swift","highlights":[{"line":3},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66},{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82},{"line":83},{"line":84},{"line":85},{"line":86},{"line":87},{"line":88},{"line":89},{"line":90},{"line":91},{"line":92},{"line":93},{"line":94},{"line":95},{"line":96},{"line":97},{"line":98},{"line":99},{"line":100},{"line":101},{"line":102},{"line":103},{"line":104},{"line":105},{"line":106},{"line":107},{"line":108},{"line":109},{"line":110},{"line":111},{"line":112}],"syntax":"swift"},"chapter-2-20-enum-add-new-page.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","enum HomeTabNavigationablePages: PKSPage {","    case detail(article: Article, recommendations: [Article])","    case authorDetail","    ","    var description: String {","        switch self {","        case .detail(let article, let recommendations):","            return \"\\(article.title) - \\(recommendations.count)\"","        case .authorDetail:","            return \"Author Detail\"","        }","    }","    ","    var body: some View {","        switch self {","        case .detail(article: let article, recommendations: let recommendations):","            ArticleDetailView(article: article, recommendations: recommendations)","        case .authorDetail:","            AuthorDetail()","        }","    }","}"],"fileName":"NavigationPages.swift","type":"file","highlights":[],"identifier":"chapter-2-20-enum-add-new-page.swift","fileType":"swift"},"preview-author-detail-sheet.png":{"identifier":"preview-author-detail-sheet.png","alt":"iOS Simulator displaying AuthorDetailView triggered by tapping the author name.","type":"image","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/preview-author-detail-sheet.png","traits":["1x","light"]},{"traits":["1x","dark"],"url":"\/images\/pksnavigation.PKSNavigation\/preview-author-detail-sheet~dark.png"}]},"preview-article-list-homepage.png":{"identifier":"preview-article-list-homepage.png","alt":"iOS Simulator displaying HomepageView with PKSNavigationManager integrated.","type":"image","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-list-homepage.png","traits":["1x","light"]},{"traits":["1x","dark"],"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-list-homepage~dark.png"}]},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/CreatingTabs#Implementing-the-Tab-View":{"url":"\/tutorials\/pksnavigation\/creatingtabs#Implementing-the-Tab-View","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs#Implementing-the-Tab-View","kind":"section","type":"section","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to create a dynamic and responsive tab view in your SwiftUI application using PKSNavigation. We’ll guide you through setting up your project, integrating PKSNavigation, and implementing a functional tab-based navigation system."}],"title":"Implementing the Tab View","role":"pseudoSymbol"},"preview-article-detail.png":{"identifier":"preview-article-detail.png","type":"image","alt":"iOS Simulator displaying ArticleDetailView with PKSNavigation integration.","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail.png","traits":["1x","light"]},{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail~dark.png","traits":["1x","dark"]}]},"chapter-2-07-enum-confirm-protocol.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","enum HomeTabNavigationablePages: PKSPage {","    case detail(article: Article, recommendations: [Article])","    ","    var description: String {","        switch self {","        case .detail(let article, let recommendations):","            return \"\\(article.title) - \\(recommendations.count)\"","        }","    }","    ","    var body: some View {","        switch self {","        case .detail(article: let article, recommendations: let recommendations):","            ArticleDetailView(article: article, recommendations: recommendations)","        }","    }","","}"],"fileName":"NavigationPages.swift","type":"file","highlights":[{"line":1},{"line":6},{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20}],"identifier":"chapter-2-07-enum-confirm-protocol.swift","fileType":"swift"},"chapter-2-19-author-detail-navigation-cover-navigation.swift":{"fileName":"AuthorDetail.swift","content":["import SwiftUI","import PKSNavigation","","struct AuthorDetail: View {","    @State var presentationDetents: Set<PresentationDetent> = [.medium]","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @StateObject var authorNavigationManager: PKSNavigationManager = PKSNavigationManager(identifier: \"Author Navigation Manager\")","    ","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                        .contentShape(Rectangle())","                        .onTapGesture {","                            authorNavigationManager.navigate(","                                to: HomeTabNavigationablePages.detail(","                                    article: Array.mockData[0],","                                    recommendations: .shuffledMockData","                                ),","                                presentation: .cover","                            )","                        }","                    ArticleRow(article: Array.mockData[1])","                        .contentShape(Rectangle())","                        .onTapGesture {","                            authorNavigationManager.navigate(","                                to: HomeTabNavigationablePages.detail(","                                    article: Array.mockData[1],","                                    recommendations: .shuffledMockData","                                ),","                                presentation: .cover","                            )","                        }","                }","            }","            .padding()","            \/\/ It is only important when we are showing the sheet","            .background(","                GeometryReader { proxy in","                    Color.clear \/\/ we just want the reader to get triggered, so let's use an empty color","                        .onAppear {","                            if proxy.size.height > UIScreen.main.bounds.size.height * 0.7 {","                                presentationDetents = [.large]","                            } else {","                                presentationDetents = [.height(proxy.size.height)]","                            }","                        }","                }","            )","        }","        .presentationDetents(presentationDetents)","        \/\/ Navigation Manager Operations","        .onAppear {","            authorNavigationManager.setParent(navigationManager)","        }","        \/\/ Register Sheet and Cover stack - Always use the current flow navigation manager. Don't use the parent!","        .modalNavigationStackManager(navigationManager: authorNavigationManager)","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-19-author-detail-navigation-cover-navigation.swift","highlights":[{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":43},{"line":44},{"line":45},{"line":46},{"line":47},{"line":48},{"line":49},{"line":50},{"line":51},{"line":52}],"syntax":"swift"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation#Enhancing-Detail-Page-with-Sheet-Navigation":{"abstract":[{"type":"text","text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/pksnavigation\/leveragingpksnavigation#Enhancing-Detail-Page-with-Sheet-Navigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Enhancing-Detail-Page-with-Sheet-Navigation","title":"Enhancing Detail Page with Sheet Navigation","type":"section"},"chapter-2-17-author-detail-navigation-set-parent.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","struct AuthorDetail: View {","    @State var presentationDetents: Set<PresentationDetent> = [.medium]","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @StateObject var authorNavigationManager: PKSNavigationManager = PKSNavigationManager(identifier: \"Author Navigation Manager\")","    ","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                    ArticleRow(article: Array.mockData[1])","                }","            }","            .padding()","            \/\/ It is only important when we are showing the sheet","            .background(","                GeometryReader { proxy in","                    Color.clear \/\/ we just want the reader to get triggered, so let's use an empty color","                        .onAppear {","                            if proxy.size.height > UIScreen.main.bounds.size.height * 0.7 {","                                presentationDetents = [.large]","                            } else {","                                presentationDetents = [.height(proxy.size.height)]","                            }","                        }","                }","            )","        }","        .presentationDetents(presentationDetents)","        \/\/ Navigation Manager Operations","        .onAppear {","            authorNavigationManager.setParent(navigationManager)","        }","    }","}"],"fileName":"AuthorDetail.swift","type":"file","highlights":[{"line":51},{"line":52},{"line":53},{"line":54}],"identifier":"chapter-2-17-author-detail-navigation-set-parent.swift","fileType":"swift"},"preview-article-detail-back.png":{"alt":"iOS Simulator displaying ArticleDetailView prepared for author navigation.","identifier":"preview-article-detail-back.png","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail-back.png","traits":["1x","light"]},{"traits":["1x","dark"],"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail-back~dark.png"}],"type":"image"},"chapter-2-08-homepage.swift":{"syntax":"swift","content":["import SwiftUI","","struct HomePage: View {","    var mockData: [Article] = .mockData","    ","    var body: some View {","        ScrollView(.vertical) {","            VStack(alignment: .leading, spacing: 20) {","                Section {","                    ForEach(mockData) { article in","                        ArticleRow(article: article)","                    }","                } header: {","                    Text(\"Articles\")","                        .font(.largeTitle)","                        .bold()","                        .padding(.bottom, 10)","                }","            }","            .padding(.horizontal)","        }","    }","}"],"fileName":"Homepage.swift","type":"file","highlights":[],"identifier":"chapter-2-08-homepage.swift","fileType":"swift"},"preview-article-row.png":{"alt":"iOS Simulator preview of ArticleRowView displaying an article's title, author, and date.","identifier":"preview-article-row.png","variants":[{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-row.png","traits":["1x","light"]},{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-row~dark.png","traits":["1x","dark"]}],"type":"image"},"chapter-2-14-author-detail.swift":{"syntax":"swift","content":["import SwiftUI","","struct AuthorDetail: View {","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                    ArticleRow(article: Array.mockData[1])","                }","            }","            .padding()","        }","    }","}"],"fileName":"AuthorDetail.swift","type":"file","highlights":[],"identifier":"chapter-2-14-author-detail.swift","fileType":"swift"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/CreatingTabs#Set-Up-a-New-Project-and-Add-PKSNavigation":{"url":"\/tutorials\/pksnavigation\/creatingtabs#Set-Up-a-New-Project-and-Add-PKSNavigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs#Set-Up-a-New-Project-and-Add-PKSNavigation","kind":"section","type":"section","abstract":[{"type":"text","text":"In this tutorial, you’ll learn how to create a dynamic and responsive tab view in your SwiftUI application using PKSNavigation. We’ll guide you through setting up your project, integrating PKSNavigation, and implementing a functional tab-based navigation system."}],"title":"Set Up a New Project and Add PKSNavigation","role":"pseudoSymbol"},"preview-author-detail.png":{"alt":"iOS Simulator preview of AuthorDetailView displaying author's information.","identifier":"preview-author-detail.png","variants":[{"traits":["1x","light"],"url":"\/images\/pksnavigation.PKSNavigation\/preview-author-detail.png"},{"url":"\/images\/pksnavigation.PKSNavigation\/preview-author-detail~dark.png","traits":["1x","dark"]}],"type":"image"},"chapter-2-16-author-detail-navigation-new-navigation-manager.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","struct AuthorDetail: View {","    @State var presentationDetents: Set<PresentationDetent> = [.medium]","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @StateObject var authorNavigationManager: PKSNavigationManager = PKSNavigationManager(identifier: \"Author Navigation Manager\")","    ","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                    ArticleRow(article: Array.mockData[1])","                }","            }","            .padding()","            \/\/ It is only important when we are showing the sheet","            .background(","                GeometryReader { proxy in","                    Color.clear \/\/ we just want the reader to get triggered, so let's use an empty color","                        .onAppear {","                            if proxy.size.height > UIScreen.main.bounds.size.height * 0.7 {","                                presentationDetents = [.large]","                            } else {","                                presentationDetents = [.height(proxy.size.height)]","                            }","                        }","                }","            )","        }","        .presentationDetents(presentationDetents)","    }","}"],"fileName":"AuthorDetail.swift","type":"file","highlights":[{"line":2},{"line":6},{"line":7}],"identifier":"chapter-2-16-author-detail-navigation-new-navigation-manager.swift","fileType":"swift"},"chapter-2-21-article-detail-author-navigation-preparation.swift":{"fileName":"ArticleDetail.swift","content":["import SwiftUI","import PKSNavigation","","struct ArticleDetailView: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @Environment(\\.colorScheme) var colorScheme","    @Environment(\\.pksDismiss) var dismiss","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            HStack {","                Image(systemName: \"arrow.left\")","                    .font(.headline)","                    .onTapGesture {","                        dismiss()","                    }","                ","                Text(article.title)","                    .font(.title)","                    .bold()","            }","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                            .contentShape(Rectangle())","                            .onTapGesture {","                                navigationManager.navigate(to: HomeTabNavigationablePages.detail(article: recommendation, recommendations: .shuffledMockData))","                            }","                    }","                }","            }","        }","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-21-article-detail-author-navigation-preparation.swift","highlights":[],"syntax":"swift"},"chapter-2-12-article-detail-navigation.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","struct ArticleDetailView: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @Environment(\\.colorScheme) var colorScheme","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            Text(article.title)","                .font(.title)","                .bold()","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                            .contentShape(Rectangle())","                            .onTapGesture {","                                navigationManager.navigate(to: HomeTabNavigationablePages.detail(","                                    article: recommendation,","                                    recommendations: .mockData","                                ))","                            }","                    }","                }","            }","        }","    }","}"],"fileName":"ArticleDetail.swift","type":"file","highlights":[{"line":2},{"line":5},{"line":76},{"line":77},{"line":78},{"line":79},{"line":80},{"line":81},{"line":82}],"identifier":"chapter-2-12-article-detail-navigation.swift","fileType":"swift"},"chapter-2-22-article-detail-to-author-detail-navigation.swift":{"fileName":"ArticleDetail.swift","content":["import SwiftUI","import PKSNavigation","","struct ArticleDetailView: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @Environment(\\.colorScheme) var colorScheme","    @Environment(\\.pksDismiss) var dismiss","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            HStack {","                Image(systemName: \"arrow.left\")","                    .font(.headline)","                    .onTapGesture {","                        dismiss()","                    }","                ","                Text(article.title)","                    .font(.title)","                    .bold()","            }","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","                .underline()","                .onTapGesture {","                    navigationManager.navigate(to: HomeTabNavigationablePages.authorDetail, presentation: .sheet)","                }","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                            .contentShape(Rectangle())","                            .onTapGesture {","                                navigationManager.navigate(to: HomeTabNavigationablePages.detail(article: recommendation, recommendations: .shuffledMockData))","                            }","                    }","                }","            }","        }","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-22-article-detail-to-author-detail-navigation.swift","highlights":[{"line":51},{"line":52},{"line":53},{"line":54}],"syntax":"swift"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation#Building-the-Articles-Feature":{"url":"\/tutorials\/pksnavigation\/leveragingpksnavigation#Building-the-Articles-Feature","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Building-the-Articles-Feature","kind":"section","type":"section","abstract":[{"text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows.","type":"text"}],"title":"Building the Articles Feature","role":"pseudoSymbol"},"chapter-2-06-enum-add-pages.swift":{"syntax":"swift","content":["","import PKSNavigation","","enum HomeTabNavigationablePages: PKSPage {","    case detail(article: Article, recommendations: [Article])","}"],"fileName":"NavigationPages.swift","type":"file","highlights":[{"line":1},{"line":5}],"identifier":"chapter-2-06-enum-add-pages.swift","fileType":"swift"},"chapter-2-04-article-detail.swift":{"fileName":"ArticleDetailView.swift","content":["import SwiftUI","","struct ArticleDetailView: View {","    @Environment(\\.colorScheme) var colorScheme","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            Text(article.title)","                .font(.title)","                .bold()","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                    }","                }","            }","        }","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-04-article-detail.swift","highlights":[],"syntax":"swift"},"preview-article-detail-author-name-navigationable.png":{"alt":"iOS Simulator displaying ArticleDetailView with a clickable author name navigating to AuthorDetailView.","identifier":"preview-article-detail-author-name-navigationable.png","variants":[{"traits":["1x","light"],"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail-author-name-navigationable.png"},{"url":"\/images\/pksnavigation.PKSNavigation\/preview-article-detail-author-name-navigationable~dark.png","traits":["1x","dark"]}],"type":"image"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation":{"url":"\/tutorials\/pksnavigation\/leveragingpksnavigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation","kind":"project","estimatedTime":"25min","type":"topic","abstract":[{"type":"text","text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows."}],"title":"Seamless Navigation in iOS Tabs: Leveraging PKSNavigation","role":"project"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation#Setting-Up-PKS-Navigation":{"url":"\/tutorials\/pksnavigation\/leveragingpksnavigation#Setting-Up-PKS-Navigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Setting-Up-PKS-Navigation","kind":"section","type":"section","abstract":[{"text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows.","type":"text"}],"title":"Setting Up PKS Navigation","role":"pseudoSymbol"},"chapter-2-11-article-detail-base.swift":{"fileName":"ArticleDetail.swift","content":["import SwiftUI","","struct ArticleDetailView: View {","    @Environment(\\.colorScheme) var colorScheme","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            Text(article.title)","                .font(.title)","                .bold()","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                    }","                }","            }","        }","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-11-article-detail-base.swift","highlights":[],"syntax":"swift"},"chapter-2-03-article-row.swift":{"syntax":"swift","content":["import SwiftUI","","struct ArticleRow: View {","    @Environment(\\.colorScheme) var colorScheme","    ","    let article: Article","    ","    var body: some View {","        HStack(alignment: .top, spacing: 16) {","            Image(systemName: \"doc.text\")","                .resizable()","                .scaledToFit()","                .frame(width: 80, height: 80)","                .foregroundColor(colorScheme == .dark ? .white : .blue)","            ","            VStack(alignment: .leading, spacing: 8) {","                Text(article.title)","                    .font(.headline)","                    .foregroundColor(.primary)","                ","                Text(\"by \\(article.author)\")","                    .font(.subheadline)","                    .foregroundColor(.secondary)","                ","                Text(article.date)","                    .font(.caption)","                    .foregroundColor(.secondary)","                ","                Text(article.summary)","                    .font(.body)","                    .foregroundColor(.primary)","                    .lineLimit(2)","            }","            .frame(maxWidth: .infinity, alignment: .leading)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","        .background(colorScheme == .dark ? Color.black : Color.white)","        .foregroundColor(colorScheme == .dark ? Color.white : Color.black)","        .clipShape(RoundedRectangle(cornerRadius: 10))","        .overlay {","            RoundedRectangle(cornerRadius: 10)","                .stroke(Color.init(.systemGray4))","        }","    }","}"],"fileName":"ArticleRowView.swift","type":"file","highlights":[],"identifier":"chapter-2-03-article-row.swift","fileType":"swift"},"chapter-2-15-author-detail-sheet-preparation.swift":{"fileName":"AuthorDetail.swift","content":["import SwiftUI","","struct AuthorDetail: View {","    @State var presentationDetents: Set<PresentationDetent> = [.medium]","    ","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                    ArticleRow(article: Array.mockData[1])","                }","            }","            .padding()","            \/\/ It is only important when we are showing the sheet","            .background(","                GeometryReader { proxy in","                    Color.clear \/\/ we just want the reader to get triggered, so let's use an empty color","                        .onAppear {","                            if proxy.size.height > UIScreen.main.bounds.size.height * 0.7 {","                                presentationDetents = [.large]","                            } else {","                                presentationDetents = [.height(proxy.size.height)]","                            }","                        }","                }","            )","        }","        .presentationDetents(presentationDetents)","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-15-author-detail-sheet-preparation.swift","highlights":[{"line":4},{"line":5},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":47}],"syntax":"swift"},"tutorial-chapter-2.zip":{"url":"\/downloads\/pksnavigation.PKSNavigation\/tutorial-chapter-2.zip","identifier":"tutorial-chapter-2.zip","checksum":"2d607ff5d3f26f40a5b5eb4362089deb9a26c6288d8a20ca8fd1192ef7f60f9190eafbd07d7f540ea0697af21335544cd303208cf7162d6fb0bc9f85dcdcbca2","type":"download"},"chapter-2-13-article-detail-navigation-back-button.swift":{"fileName":"ArticleDetail.swift","content":["import SwiftUI","import PKSNavigation","","struct ArticleDetailView: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @Environment(\\.colorScheme) var colorScheme","    @Environment(\\.pksDismiss) var dismiss","    ","    let article: Article","    let recommendations: [Article]","    ","    var body: some View {","        Section {","            ScrollView(.vertical) {","                VStack(alignment: .leading){","                    VStack(alignment: .leading, spacing: 12) {","                        ForEach(article.description, id: \\.self) { paragraph in","                            Text(paragraph)","                                .font(.body)","                                .foregroundColor(.primary)","                                .multilineTextAlignment(.leading)","                        }","                    }","                    .padding()","                    recommendationsView","                }","            }","        } header: {","            header","        }","        .toolbar(.hidden)","    }","    ","    private var header: some View {","        VStack(alignment: .leading) {","            HStack {","                Image(systemName: \"arrow.left\")","                    .font(.headline)","                    .onTapGesture {","                        dismiss()","                    }","                ","                Text(article.title)","                    .font(.title)","                    .bold()","            }","","            Text(\"by \\(article.author) • \\(article.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .frame(maxWidth: .infinity, alignment: .leading)","    }","    ","    private func RecommendationCard(_ recommendation: Article) -> some View {","        VStack(alignment: .leading, spacing: 12) {","            Text(recommendation.title)","                .font(.headline)","                .bold()","            ","            Text(\"by \\(recommendation.author) • \\(recommendation.date)\")","                .font(.subheadline)","                .foregroundColor(.secondary)","        }","        .padding()","        .background(Color.init(.systemGray3))","        .clipShape(RoundedRectangle(cornerRadius: 16))","        .overlay {","            RoundedRectangle(cornerRadius: 16)","                .stroke(Color.init(.systemGray5))","        }","        .padding(.trailing, 16)","    }","    ","    private var recommendationsView: some View {","        Section(header: Text(\"Recommended Articles\").font(.headline).padding()) {","            ScrollView(.horizontal) {","                HStack(spacing: 0) {","                    Rectangle()","                        .fill(Color.clear)","                        .frame(width: 16)","                    ForEach(recommendations, id: \\.id) { recommendation in","                        RecommendationCard(recommendation)","                            .contentShape(Rectangle())","                            .onTapGesture {","                                navigationManager.navigate(to: HomeTabNavigationablePages.detail(","                                    article: recommendation,","                                    recommendations: .mockData","                                ))","                            }","                    }","                }","            }","        }","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-13-article-detail-navigation-back-button.swift","highlights":[{"line":7},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43},{"line":44},{"line":45},{"line":46}],"syntax":"swift"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation#Implementing-Homepage-Navigation":{"abstract":[{"text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows.","type":"text"}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/pksnavigation\/leveragingpksnavigation#Implementing-Homepage-Navigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Implementing-Homepage-Navigation","title":"Implementing Homepage Navigation","type":"section"},"chapter-2-05-create-enum.swift":{"syntax":"swift","content":["import PKSNavigation","","enum HomeTabNavigationablePages: PKSPage {","    ","}"],"fileName":"NavigationPages.swift","type":"file","highlights":[],"identifier":"chapter-2-05-create-enum.swift","fileType":"swift"},"chapter-2-09-homepage-navigation-manager.swift":{"fileName":"Homepage.swift","content":["import SwiftUI","import PKSNavigation","","struct HomePage: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    var mockData: [Article] = .mockData","    ","    var body: some View {","        ScrollView(.vertical) {","            VStack(alignment: .leading, spacing: 20) {","                Section {","                    ForEach(mockData) { article in","                        ArticleRow(article: article)","                    }","                } header: {","                    Text(\"Articles\")","                        .font(.largeTitle)","                        .bold()","                        .padding(.bottom, 10)","                }","            }","            .padding(.horizontal)","        }","        .toolbar(.hidden)","    }","}"],"fileType":"swift","type":"file","identifier":"chapter-2-09-homepage-navigation-manager.swift","highlights":[{"line":2},{"line":5},{"line":24}],"syntax":"swift"},"chapter-2-10-homepage-navigation.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","struct HomePage: View {","    @EnvironmentObject var navigationManager: PKSNavigationManager","    var mockData: [Article] = .mockData","    ","    var body: some View {","        ScrollView(.vertical) {","            VStack(alignment: .leading, spacing: 20) {","                Section {","                    ForEach(mockData) { article in","                        ArticleRow(article: article)","                            .contentShape(Rectangle())","                            .onTapGesture {","                                navigationManager.navigate(","                                    to: HomeTabNavigationablePages.detail(","                                        article: .mock,","                                        recommendations: .mockData","                                    )","                                )","                            }","                    }","                } header: {","                    Text(\"Articles\")","                        .font(.largeTitle)","                        .bold()","                        .padding(.bottom, 10)","                }","            }","            .padding(.horizontal)","        }","        .toolbar(.hidden)","    }","}"],"fileName":"Homepage.swift","type":"file","highlights":[{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22}],"identifier":"chapter-2-10-homepage-navigation.swift","fileType":"swift"},"chapter-2-01-article-model.swift":{"type":"file","highlights":[],"identifier":"chapter-2-01-article-model.swift","syntax":"swift","content":["import Foundation","","struct Article: Identifiable, Hashable, Equatable {","    let id = UUID()","    let title: String","    let author: String","    let date: String","    let summary: String","    let description: [String]","    let imageName: String","}"],"fileType":"swift","fileName":"ArticleModel.swift"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/CreatingTabs":{"url":"\/tutorials\/pksnavigation\/creatingtabs","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/CreatingTabs","kind":"project","estimatedTime":"5min","type":"topic","abstract":[{"text":"In this tutorial, you’ll learn how to create a dynamic and responsive tab view in your SwiftUI application using PKSNavigation. We’ll guide you through setting up your project, integrating PKSNavigation, and implementing a functional tab-based navigation system.","type":"text"}],"title":"Creating a Tab View","role":"project"},"doc://pksnavigation.PKSNavigation/tutorials/MeetPKSNavigation":{"abstract":[{"type":"strong","inlineContent":[{"text":"Meet PKSNavigation","type":"text"}]},{"type":"text","text":" is your comprehensive guide to mastering PKSNavigation, the powerful and flexible navigation framework for SwiftUI applications. This tutorial explores every use case, demonstrating how to manage complex navigation flows with stack-based, sheet, and full-screen cover presentations effortlessly. By following along, you’ll gain the skills to implement robust and customizable navigation solutions that enhance the user experience in your SwiftUI projects."}],"role":"overview","kind":"overview","url":"\/tutorials\/meetpksnavigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation","title":"Meet PKSNavigation","type":"topic"},"doc://pksnavigation.PKSNavigation/tutorials/MeetPKSNavigation/Getting-Started/Installation-and-Configuration":{"url":"\/tutorials\/meetpksnavigation\/getting-started\/installation-and-configuration","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/MeetPKSNavigation\/Getting-Started\/Installation-and-Configuration","kind":"article","type":"topic","abstract":[],"title":"Installation and Configuration","role":"article"},"doc://pksnavigation.PKSNavigation/tutorials/PKSNavigation/LeveragingPKSNavigation#Configuring-Detail-Page-Navigation":{"abstract":[{"type":"text","text":"In this tutorial, you will learn step by step how to navigate in different ways within a tab-based application. You will learn how to create navigation pages systematically and how to display pages using stack navigation. By the end of this tutorial, you’ll have a fully navigable tab-based application that enhances user experience through intuitive navigation flows."}],"role":"pseudoSymbol","kind":"section","url":"\/tutorials\/pksnavigation\/leveragingpksnavigation#Configuring-Detail-Page-Navigation","identifier":"doc:\/\/pksnavigation.PKSNavigation\/tutorials\/PKSNavigation\/LeveragingPKSNavigation#Configuring-Detail-Page-Navigation","title":"Configuring Detail Page Navigation","type":"section"},"chapter-2-18-author-detail-navigation-create-modal-stacks.swift":{"syntax":"swift","content":["import SwiftUI","import PKSNavigation","","struct AuthorDetail: View {","    @State var presentationDetents: Set<PresentationDetent> = [.medium]","    @EnvironmentObject var navigationManager: PKSNavigationManager","    @StateObject var authorNavigationManager: PKSNavigationManager = PKSNavigationManager(identifier: \"Author Navigation Manager\")","    ","    var body: some View {","        ScrollView(.vertical, showsIndicators: false) {","            VStack(alignment: .leading, spacing: 24) {","                HStack(spacing: 24) {","                    Image(systemName: \"figure\")","                        .resizable()","                        .scaledToFit()","                    VStack(alignment: .leading) {","                        Text(\"Joe Doe\")","                            .font(.headline)","                        Text(\"joe@example.com\")","                            .font(.subheadline)","                            .foregroundColor(.secondary)","                        ","                        Text(\"2 Articles published\")","                    }","                }","                .fixedSize()","                ","                VStack(alignment: .leading) {","                    Text(\"Articles\")","                        .font(.headline)","                    ArticleRow(article: Array.mockData[0])","                    ArticleRow(article: Array.mockData[1])","                }","            }","            .padding()","            \/\/ It is only important when we are showing the sheet","            .background(","                GeometryReader { proxy in","                    Color.clear \/\/ we just want the reader to get triggered, so let's use an empty color","                        .onAppear {","                            if proxy.size.height > UIScreen.main.bounds.size.height * 0.7 {","                                presentationDetents = [.large]","                            } else {","                                presentationDetents = [.height(proxy.size.height)]","                            }","                        }","                }","            )","        }","        .presentationDetents(presentationDetents)","        \/\/ Navigation Manager Operations","        .onAppear {","            authorNavigationManager.setParent(navigationManager)","        }","        \/\/ Register Sheet and Cover stack - Always use the current flow navigation manager. Don't use the parent!","        .modalNavigationStackManager(navigationManager: authorNavigationManager)","    }","}"],"fileName":"AuthorDetail.swift","type":"file","highlights":[{"line":55},{"line":56}],"identifier":"chapter-2-18-author-detail-navigation-create-modal-stacks.swift","fileType":"swift"}}}