{"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PKSPage"},{"text":" : ","kind":"text"},{"text":"Hashable","preciseIdentifier":"s:SH","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Identifiable","preciseIdentifier":"s:s12IdentifiableP","kind":"typeIdentifier"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","anchor":"Conforming-to-PKSPage","text":"Conforming to PKSPage","level":2},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" requires conforming types to implement "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Identifiable"},{"text":". This ensures each page is uniquely identifiable and can be efficiently managed within navigation stacks.","type":"text"}]},{"type":"heading","level":3,"anchor":"Protocol-Definition","text":"Protocol Definition"},{"syntax":"swift","type":"codeListing","code":["import SwiftUI","","@available(iOS 16.0, *)","public protocol PKSPage: Hashable, Identifiable {","","    \/\/\/ The type of view representing the body of this page.","    associatedtype Body: View","","    \/\/\/ A view builder that constructs the view for this page.","    \/\/\/","    \/\/\/ Implement this method to provide the content for your custom page.","    @MainActor @ViewBuilder var body: Self.Body { get }","","    \/\/\/ A description of the page.","    var description: String { get }","}"]},{"level":2,"type":"heading","text":"Methodology One: Enum-Based Pages","anchor":"Methodology-One-Enum-Based-Pages"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use an "},{"code":"enum","type":"codeVoice"},{"text":" when you have a fixed set of pages. This approach promotes simplicity and type safety.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import PKSNavigation","","\/\/ Define the Pages enum conforming to PKSPage","enum Pages: PKSPage {","    case home","    case settings","","    \/\/ Description for debugging","    var description: String {","        switch self {","        case .home:","            return \"Home Page\"","        case .settings:","            return \"Settings Page\"","        }","    }","","    \/\/ SwiftUI view for each page","    @ViewBuilder","    var body: some View {","        switch self {","        case .home:","            HomeView()","        case .settings:","            SettingsView()","        }","    }","}","","\/\/ Example HomeView","struct HomeView: View {","    var body: some View {","        VStack {","            Text(\"Welcome to the Home Page\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Example SettingsView","struct SettingsView: View {","    var body: some View {","        VStack {","            Text(\"Settings\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}"]},{"anchor":"Methodology-Two-Struct-Based-Pages","type":"heading","text":"Methodology Two: Struct-Based Pages","level":2},{"inlineContent":[{"type":"text","text":"Use "},{"code":"structs","type":"codeVoice"},{"type":"text","text":" when pages require associated data or more complex configurations. This method is ideal for dynamic content."}],"type":"paragraph"},{"code":["import SwiftUI","import PKSNavigation","","\/\/ Define a HomeView conforming to PKSPage","struct HomeView: PKSPage {","    var description: String {","        return \"HomeView\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Welcome to the Home Page\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Define a SettingsView conforming to PKSPage","struct SettingsView: PKSPage {","","    var description: String {","        return \"SettingsView\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Settings\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Example of a dynamic page with associated data","struct ProfileView: PKSPage {","    let userID: String","","    var description: String {","        return \"ProfileView for user \\(userID)\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Profile of \\(userID)\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}"],"type":"codeListing","syntax":"swift"},{"text":"Conclusion","anchor":"Conclusion","level":2,"type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" offers a flexible and type-safe way to manage pages within your SwiftUI application. Whether you prefer enum-based simplicity or struct-based flexibility, "},{"code":"PKSPage","type":"codeVoice"},{"type":"text","text":" adapts to your architectural needs, ensuring a maintainable and scalable navigation structure."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more detailed information and advanced configurations, refer to the "},{"overridingTitleInlineContent":[{"type":"text","text":"Deep Dive into PKSPage Documentation"}],"overridingTitle":"Deep Dive into PKSPage Documentation","isActive":true,"type":"reference","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/DeepDiveToPKSPage"},{"type":"text","text":"."}]}]}],"abstract":[{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" is a protocol designed to represent individual pages within your SwiftUI applicationâ€™s user interface. This documentation provides straightforward examples to help you integrate "},{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" into your project seamlessly."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage"},"metadata":{"roleHeading":"Protocol","role":"symbol","modules":[{"name":"PKSNavigation"}],"navigatorTitle":[{"kind":"identifier","text":"PKSPage"}],"externalID":"s:13PKSNavigation7PKSPageP","title":"PKSPage","symbolKind":"protocol","platforms":[{"beta":false,"name":"iOS","deprecated":false,"introducedAt":"16.0","unavailable":false},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"16.0","name":"iPadOS"},{"deprecated":false,"beta":false,"unavailable":false,"introducedAt":"16.0","name":"Mac Catalyst"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PKSPage","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/pksnavigation\/pkspage"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation"]]},"topicSections":[{"anchor":"Associated-Types","generated":true,"identifiers":["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/Body-swift.associatedtype"],"title":"Associated Types"},{"generated":true,"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/body-swift.property","doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/description"]}],"relationshipsSections":[{"identifiers":["doc:\/\/pksnavigation.PKSNavigation\/SQ","doc:\/\/pksnavigation.PKSNavigation\/SH","doc:\/\/pksnavigation.PKSNavigation\/s12IdentifiableP"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"references":{"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/description":{"type":"topic","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/description","abstract":[{"type":"text","text":"A description of the page."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"role":"symbol","title":"description","url":"\/documentation\/pksnavigation\/pkspage\/description","kind":"symbol","required":true},"doc://pksnavigation.PKSNavigation/s12IdentifiableP":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/s12IdentifiableP","title":"Swift.Identifiable","type":"unresolvable"},"doc://pksnavigation.PKSNavigation/SH":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/body-swift.property":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/body-swift.property","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"body","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:13PKSNavigation7PKSPageP4BodyQa","text":"Body"}],"type":"topic","url":"\/documentation\/pksnavigation\/pkspage\/body-swift.property","abstract":[{"type":"text","text":"A view builder that constructs the view for this page."}],"kind":"symbol","required":true,"title":"body"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/Body-swift.associatedtype":{"kind":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"text":" ","kind":"text"},{"text":"Body","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"type":"topic","url":"\/documentation\/pksnavigation\/pkspage\/body-swift.associatedtype","abstract":[{"type":"text","text":"The type of view representing the body of this page."}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/Body-swift.associatedtype","required":true,"title":"Body","role":"symbol"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/DeepDiveToPKSPage":{"title":"Deep Dive to PKSPage","type":"topic","abstract":[{"text":"In this guide, youâ€™ll learn how to leverage the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage","type":"reference"},{"text":" protocol to create modular, identifiable, and hashable pages within your SwiftUI applications. Whether youâ€™re building a simple app or a complex navigation system, ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage"},{"text":" provides the flexibility and structure you need to manage your appâ€™s user interface efficiently.","type":"text"}],"url":"\/documentation\/pksnavigation\/deepdivetopkspage","role":"article","kind":"article","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/DeepDiveToPKSPage"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/pksnavigation\/pkspage","title":"PKSPage","navigatorTitle":[{"text":"PKSPage","kind":"identifier"}],"abstract":[{"code":"PKSPage","type":"codeVoice"},{"text":" is a protocol designed to represent individual pages within your SwiftUI applicationâ€™s user interface. This documentation provides straightforward examples to help you integrate ","type":"text"},{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" into your project seamlessly."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"PKSPage"}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation":{"role":"collection","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation","url":"\/documentation\/pksnavigation","abstract":[{"type":"strong","inlineContent":[{"text":"PKSNavigation","type":"text"}]},{"type":"text","text":" is a simple yet powerful navigation framework designed for SwiftUI applications. It helps you manage complex navigation flows with ease, supporting stack-based navigation, sheet presentations, and full-screen covers. Whether youâ€™re building a small app or a large-scale project, PKSNavigation streamlines your navigation logic, making your code cleaner and more maintainable."}],"type":"topic","title":"PKSNavigation","kind":"symbol"},"doc://pksnavigation.PKSNavigation/SQ":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/SQ","type":"unresolvable","title":"Swift.Equatable"}}}