{"identifier":{"url":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/pksnavigation.PKSNavigation\/SQ","doc:\/\/pksnavigation.PKSNavigation\/SH","doc:\/\/pksnavigation.PKSNavigation\/s12IdentifiableP"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation"]]},"topicSections":[{"title":"Associated Types","identifiers":["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/Body-swift.associatedtype"],"anchor":"Associated-Types","generated":true},{"identifiers":["doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/body-swift.property","doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/description"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PKSPage","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"Hashable","kind":"typeIdentifier","preciseIdentifier":"s:SH"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12IdentifiableP","text":"Identifiable"}],"languages":["swift"]}]},{"content":[{"type":"heading","level":2,"anchor":"Conforming-to-PKSPage","text":"Conforming to PKSPage"},{"inlineContent":[{"code":"PKSPage","type":"codeVoice"},{"type":"text","text":" requires conforming types to implement "},{"code":"Hashable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Identifiable","type":"codeVoice"},{"type":"text","text":". This ensures each page is uniquely identifiable and can be efficiently managed within navigation stacks."}],"type":"paragraph"},{"type":"heading","level":3,"text":"Protocol Definition","anchor":"Protocol-Definition"},{"type":"codeListing","code":["import SwiftUI","","@available(iOS 16.0, *)","public protocol PKSPage: Hashable, Identifiable {","","    \/\/\/ The type of view representing the body of this page.","    associatedtype Body: View","","    \/\/\/ A view builder that constructs the view for this page.","    \/\/\/","    \/\/\/ Implement this method to provide the content for your custom page.","    @MainActor @ViewBuilder var body: Self.Body { get }","","    \/\/\/ A description of the page.","    var description: String { get }","}"],"syntax":"swift"},{"text":"Methodology One: Enum-Based Pages","level":2,"type":"heading","anchor":"Methodology-One-Enum-Based-Pages"},{"type":"paragraph","inlineContent":[{"text":"Use an ","type":"text"},{"type":"codeVoice","code":"enum"},{"type":"text","text":" when you have a fixed set of pages. This approach promotes simplicity and type safety."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftUI","import PKSNavigation","","\/\/ Define the Pages enum conforming to PKSPage","enum Pages: PKSPage {","    case home","    case settings","","    \/\/ Description for debugging","    var description: String {","        switch self {","        case .home:","            return \"Home Page\"","        case .settings:","            return \"Settings Page\"","        }","    }","","    \/\/ SwiftUI view for each page","    @ViewBuilder","    var body: some View {","        switch self {","        case .home:","            HomeView()","        case .settings:","            SettingsView()","        }","    }","}","","\/\/ Example HomeView","struct HomeView: View {","    var body: some View {","        VStack {","            Text(\"Welcome to the Home Page\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Example SettingsView","struct SettingsView: View {","    var body: some View {","        VStack {","            Text(\"Settings\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}"]},{"text":"Methodology Two: Struct-Based Pages","anchor":"Methodology-Two-Struct-Based-Pages","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"structs","type":"codeVoice"},{"type":"text","text":" when pages require associated data or more complex configurations. This method is ideal for dynamic content."}]},{"syntax":"swift","code":["import SwiftUI","import PKSNavigation","","\/\/ Define a HomeView conforming to PKSPage","struct HomeView: PKSPage {","    var description: String {","        return \"HomeView\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Welcome to the Home Page\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Define a SettingsView conforming to PKSPage","struct SettingsView: PKSPage {","","    var description: String {","        return \"SettingsView\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Settings\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}","","\/\/ Example of a dynamic page with associated data","struct ProfileView: PKSPage {","    let userID: String","","    var description: String {","        return \"ProfileView for user \\(userID)\"","    }","","    @ViewBuilder","    var body: some View {","        VStack {","            Text(\"Profile of \\(userID)\")","                .font(.largeTitle)","                .padding()","            \/\/ Additional UI components","        }","    }","}"],"type":"codeListing"},{"anchor":"Conclusion","level":2,"text":"Conclusion","type":"heading"},{"type":"paragraph","inlineContent":[{"code":"PKSPage","type":"codeVoice"},{"text":" offers a flexible and type-safe way to manage pages within your SwiftUI application. Whether you prefer enum-based simplicity or struct-based flexibility, ","type":"text"},{"code":"PKSPage","type":"codeVoice"},{"text":" adapts to your architectural needs, ensuring a maintainable and scalable navigation structure.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For more detailed information and advanced configurations, refer to the "},{"isActive":true,"overridingTitle":"Deep Dive into PKSPage Documentation","type":"reference","overridingTitleInlineContent":[{"text":"Deep Dive into PKSPage Documentation","type":"text"}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/DeepDiveToPKSPage"},{"type":"text","text":"."}]}],"kind":"content"}],"kind":"symbol","abstract":[{"code":"PKSPage","type":"codeVoice"},{"type":"text","text":" is a protocol designed to represent individual pages within your SwiftUI application’s user interface. This documentation provides straightforward examples to help you integrate "},{"type":"codeVoice","code":"PKSPage"},{"type":"text","text":" into your project seamlessly."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pksnavigation\/pkspage"]}],"metadata":{"title":"PKSPage","role":"symbol","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PKSPage","kind":"identifier"}],"externalID":"s:13PKSNavigation7PKSPageP","roleHeading":"Protocol","platforms":[{"name":"iOS","deprecated":false,"introducedAt":"16.0","unavailable":false,"beta":false},{"deprecated":false,"introducedAt":"16.0","beta":false,"name":"iPadOS","unavailable":false},{"name":"Mac Catalyst","deprecated":false,"introducedAt":"16.0","unavailable":false,"beta":false}],"modules":[{"name":"PKSNavigation"}],"navigatorTitle":[{"kind":"identifier","text":"PKSPage"}]},"sections":[],"references":{"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/description":{"kind":"symbol","url":"\/documentation\/pksnavigation\/pkspage\/description","abstract":[{"type":"text","text":"A description of the page."}],"required":true,"type":"topic","role":"symbol","title":"description","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"description"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/description"},"doc://pksnavigation.PKSNavigation/s12IdentifiableP":{"type":"unresolvable","identifier":"doc:\/\/pksnavigation.PKSNavigation\/s12IdentifiableP","title":"Swift.Identifiable"},"doc://pksnavigation.PKSNavigation/SH":{"type":"unresolvable","identifier":"doc:\/\/pksnavigation.PKSNavigation\/SH","title":"Swift.Hashable"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/DeepDiveToPKSPage":{"abstract":[{"text":"In this guide, you’ll learn how to leverage the ","type":"text"},{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage","isActive":true,"type":"reference"},{"text":" protocol to create modular, identifiable, and hashable pages within your SwiftUI applications. Whether you’re building a simple app or a complex navigation system, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage"},{"text":" provides the flexibility and structure you need to manage your app’s user interface efficiently.","type":"text"}],"role":"article","kind":"article","url":"\/documentation\/pksnavigation\/deepdivetopkspage","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/DeepDiveToPKSPage","title":"Deep Dive to PKSPage","type":"topic"},"doc://pksnavigation.PKSNavigation/SQ":{"type":"unresolvable","identifier":"doc:\/\/pksnavigation.PKSNavigation\/SQ","title":"Swift.Equatable"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"PKSPage","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"PKSPage"}],"url":"\/documentation\/pksnavigation\/pkspage","abstract":[{"code":"PKSPage","type":"codeVoice"},{"text":" is a protocol designed to represent individual pages within your SwiftUI application’s user interface. This documentation provides straightforward examples to help you integrate ","type":"text"},{"code":"PKSPage","type":"codeVoice"},{"text":" into your project seamlessly.","type":"text"}],"type":"topic","title":"PKSPage","role":"symbol"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/Body-swift.associatedtype":{"identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/Body-swift.associatedtype","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"associatedtype"},{"kind":"text","text":" "},{"text":"Body","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"url":"\/documentation\/pksnavigation\/pkspage\/body-swift.associatedtype","abstract":[{"type":"text","text":"The type of view representing the body of this page."}],"type":"topic","title":"Body","required":true},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation/PKSPage/body-swift.property":{"required":true,"abstract":[{"text":"A view builder that constructs the view for this page.","type":"text"}],"url":"\/documentation\/pksnavigation\/pkspage\/body-swift.property","title":"body","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation\/PKSPage\/body-swift.property","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"body"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:13PKSNavigation7PKSPageP4BodyQa","text":"Body"}],"kind":"symbol","type":"topic"},"doc://pksnavigation.PKSNavigation/documentation/PKSNavigation":{"abstract":[{"type":"strong","inlineContent":[{"text":"PKSNavigation","type":"text"}]},{"type":"text","text":" is a simple yet powerful navigation framework designed for SwiftUI applications. It helps you manage complex navigation flows with ease, supporting stack-based navigation, sheet presentations, and full-screen covers. Whether you’re building a small app or a large-scale project, PKSNavigation streamlines your navigation logic, making your code cleaner and more maintainable."}],"kind":"symbol","title":"PKSNavigation","url":"\/documentation\/pksnavigation","role":"collection","identifier":"doc:\/\/pksnavigation.PKSNavigation\/documentation\/PKSNavigation","type":"topic"}}}